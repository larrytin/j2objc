//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/javax/xml/parsers/FilePathToURI.java
//
//  Created by retechretech on 13-9-4.
//

#include "IOSBooleanArray.h"
#include "IOSByteArray.h"
#include "IOSCharArray.h"
#include "java/io/File.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Character.h"
#include "java/lang/StringBuilder.h"
#include "javax/xml/parsers/FilePathToURI.h"

@implementation JavaxXmlParsersFilePathToURI

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:JavaxXmlParsersFilePathToURI_gNeedEscaping_ name:@"JavaxXmlParsersFilePathToURI_gNeedEscaping_"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:JavaxXmlParsersFilePathToURI_gAfterEscaping1_ name:@"JavaxXmlParsersFilePathToURI_gAfterEscaping1_"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:JavaxXmlParsersFilePathToURI_gAfterEscaping2_ name:@"JavaxXmlParsersFilePathToURI_gAfterEscaping2_"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:JavaxXmlParsersFilePathToURI_gHexChs_ name:@"JavaxXmlParsersFilePathToURI_gHexChs_"]];
  return result;
}

static IOSBooleanArray * JavaxXmlParsersFilePathToURI_gNeedEscaping_;
static IOSCharArray * JavaxXmlParsersFilePathToURI_gAfterEscaping1_;
static IOSCharArray * JavaxXmlParsersFilePathToURI_gAfterEscaping2_;
static IOSCharArray * JavaxXmlParsersFilePathToURI_gHexChs_;

+ (IOSBooleanArray *)gNeedEscaping {
  return JavaxXmlParsersFilePathToURI_gNeedEscaping_;
}

+ (void)setGNeedEscaping:(IOSBooleanArray *)gNeedEscaping {
  JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gNeedEscaping_, nil, gNeedEscaping);
}

+ (IOSCharArray *)gAfterEscaping1 {
  return JavaxXmlParsersFilePathToURI_gAfterEscaping1_;
}

+ (void)setGAfterEscaping1:(IOSCharArray *)gAfterEscaping1 {
  JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gAfterEscaping1_, nil, gAfterEscaping1);
}

+ (IOSCharArray *)gAfterEscaping2 {
  return JavaxXmlParsersFilePathToURI_gAfterEscaping2_;
}

+ (void)setGAfterEscaping2:(IOSCharArray *)gAfterEscaping2 {
  JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gAfterEscaping2_, nil, gAfterEscaping2);
}

+ (IOSCharArray *)gHexChs {
  return JavaxXmlParsersFilePathToURI_gHexChs_;
}

+ (void)setGHexChs:(IOSCharArray *)gHexChs {
  JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gHexChs_, nil, gHexChs);
}

+ (NSString *)filepath2URIWithNSString:(NSString *)path {
  if (path == nil) return nil;
  unichar separator = JavaIoFile_separatorChar;
  path = [((NSString *) nil_chk(path)) replace:separator withChar:'/'];
  int len = [((NSString *) nil_chk(path)) length], ch;
  JavaLangStringBuilder *buffer = [[[JavaLangStringBuilder alloc] initWithInt:len * 3] autorelease];
  [buffer appendWithNSString:@"file://"];
  if (len >= 2 && [path charAtWithInt:1] == ':') {
    ch = [JavaLangCharacter toUpperCaseWithUnichar:[path charAtWithInt:0]];
    if (ch >= 'A' && ch <= 'Z') {
      [buffer appendWithUnichar:'/'];
    }
  }
  int i = 0;
  for (; i < len; i++) {
    ch = [path charAtWithInt:i];
    if (ch >= 128) break;
    if ([((IOSBooleanArray *) nil_chk(JavaxXmlParsersFilePathToURI_gNeedEscaping_)) booleanAtIndex:ch]) {
      [buffer appendWithUnichar:'%'];
      [buffer appendWithUnichar:[((IOSCharArray *) nil_chk(JavaxXmlParsersFilePathToURI_gAfterEscaping1_)) charAtIndex:ch]];
      [buffer appendWithUnichar:[((IOSCharArray *) nil_chk(JavaxXmlParsersFilePathToURI_gAfterEscaping2_)) charAtIndex:ch]];
    }
    else {
      [buffer appendWithUnichar:(unichar) ch];
    }
  }
  if (i < len) {
    IOSByteArray *bytes = nil;
    char b;
    @try {
      bytes = [((NSString *) nil_chk([path substring:i])) getBytesWithCharset:@"UTF-8"];
    }
    @catch (JavaIoUnsupportedEncodingException *e) {
      return path;
    }
    len = (int) [((IOSByteArray *) nil_chk(bytes)) count];
    for (i = 0; i < len; i++) {
      b = [bytes byteAtIndex:i];
      if (b < 0) {
        ch = b + 256;
        [buffer appendWithUnichar:'%'];
        [buffer appendWithUnichar:[((IOSCharArray *) nil_chk(JavaxXmlParsersFilePathToURI_gHexChs_)) charAtIndex:ch >> 4]];
        [buffer appendWithUnichar:[JavaxXmlParsersFilePathToURI_gHexChs_ charAtIndex:ch & (int) 0xf]];
      }
      else if ([((IOSBooleanArray *) nil_chk(JavaxXmlParsersFilePathToURI_gNeedEscaping_)) booleanAtIndex:b]) {
        [buffer appendWithUnichar:'%'];
        [buffer appendWithUnichar:[((IOSCharArray *) nil_chk(JavaxXmlParsersFilePathToURI_gAfterEscaping1_)) charAtIndex:b]];
        [buffer appendWithUnichar:[((IOSCharArray *) nil_chk(JavaxXmlParsersFilePathToURI_gAfterEscaping2_)) charAtIndex:b]];
      }
      else {
        [buffer appendWithUnichar:(unichar) b];
      }
    }
  }
  return [buffer description];
}

- (id)init {
  return JreMemDebugAdd([super init]);
}

+ (void)initialize {
  if (self == [JavaxXmlParsersFilePathToURI class]) {
    JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gNeedEscaping_, nil, [IOSBooleanArray arrayWithLength:128]);
    JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gAfterEscaping1_, nil, [IOSCharArray arrayWithLength:128]);
    JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gAfterEscaping2_, nil, [IOSCharArray arrayWithLength:128]);
    JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gHexChs_, nil, [IOSCharArray arrayWithCharacters:(unichar[]){ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' } count:16]);
    {
      for (int i = 0; i <= (int) 0x1f; i++) {
        (*[JavaxXmlParsersFilePathToURI_gNeedEscaping_ booleanRefAtIndex:i]) = YES;
        (*[JavaxXmlParsersFilePathToURI_gAfterEscaping1_ charRefAtIndex:i]) = [JavaxXmlParsersFilePathToURI_gHexChs_ charAtIndex:i >> 4];
        (*[JavaxXmlParsersFilePathToURI_gAfterEscaping2_ charRefAtIndex:i]) = [JavaxXmlParsersFilePathToURI_gHexChs_ charAtIndex:i & (int) 0xf];
      }
      (*[JavaxXmlParsersFilePathToURI_gNeedEscaping_ booleanRefAtIndex:(int) 0x7f]) = YES;
      (*[JavaxXmlParsersFilePathToURI_gAfterEscaping1_ charRefAtIndex:(int) 0x7f]) = '7';
      (*[JavaxXmlParsersFilePathToURI_gAfterEscaping2_ charRefAtIndex:(int) 0x7f]) = 'F';
      IOSCharArray *escChs = [IOSCharArray arrayWithCharacters:(unichar[]){ ' ', '<', '>', '#', '%', '"', '{', '}', '|', '\\', '^', '~', '[', ']', '`' } count:15];
      int len = (int) [escChs count];
      unichar ch;
      for (int i = 0; i < len; i++) {
        ch = [escChs charAtIndex:i];
        (*[JavaxXmlParsersFilePathToURI_gNeedEscaping_ booleanRefAtIndex:ch]) = YES;
        (*[JavaxXmlParsersFilePathToURI_gAfterEscaping1_ charRefAtIndex:ch]) = [JavaxXmlParsersFilePathToURI_gHexChs_ charAtIndex:ch >> 4];
        (*[JavaxXmlParsersFilePathToURI_gAfterEscaping2_ charRefAtIndex:ch]) = [JavaxXmlParsersFilePathToURI_gHexChs_ charAtIndex:ch & (int) 0xf];
      }
    }
  }
}

@end
