//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "java/lang/Exception.h"
#include "javax/xml/parsers/FactoryConfigurationError.h"

@implementation JavaxXmlParsersFactoryConfigurationError

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (id)init {
  if (self = [super init]) {
    JavaxXmlParsersFactoryConfigurationError_set_exception_(self, nil);
    JreMemDebugAdd(self);
  }
  return self;
}

- (id)initWithNSString:(NSString *)msg {
  if (self = [super initWithNSString:msg]) {
    JavaxXmlParsersFactoryConfigurationError_set_exception_(self, nil);
    JreMemDebugAdd(self);
  }
  return self;
}

- (id)initWithJavaLangException:(JavaLangException *)e {
  if (self = [super initWithNSString:[((JavaLangException *) nil_chk(e)) description]]) {
    JavaxXmlParsersFactoryConfigurationError_set_exception_(self, e);
    JreMemDebugAdd(self);
  }
  return self;
}

- (id)initWithJavaLangException:(JavaLangException *)e
                   withNSString:(NSString *)msg {
  if (self = [super initWithNSString:msg]) {
    JavaxXmlParsersFactoryConfigurationError_set_exception_(self, e);
    JreMemDebugAdd(self);
  }
  return self;
}

- (NSString *)getMessage {
  NSString *message = [super getMessage];
  if (message == nil && exception_ != nil) {
    return [exception_ getMessage];
  }
  return message;
}

- (JavaLangException *)getException {
  return exception_;
}

- (void)dealloc {
  JreMemDebugRemove(self);
  JavaxXmlParsersFactoryConfigurationError_set_exception_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(JavaxXmlParsersFactoryConfigurationError *)other {
  [super copyAllFieldsTo:other];
  JavaxXmlParsersFactoryConfigurationError_set_exception_(other, exception_);
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:exception_ name:@"exception"]];
  return result;
}

@end
