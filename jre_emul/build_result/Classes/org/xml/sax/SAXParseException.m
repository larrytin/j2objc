//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/xml/sax/SAXParseException.java
//
//  Created by retechretech on 13-9-25.
//

#include "IOSClass.h"
#include "java/lang/Exception.h"
#include "org/xml/sax/Locator.h"
#include "org/xml/sax/SAXParseException.h"

@implementation OrgXmlSaxSAXParseException

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (id)initWithNSString:(NSString *)message
  withOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)locator {
  if (self = [super initWithNSString:message]) {
    if (locator != nil) {
      [self init__WithNSString:[locator getPublicId] withNSString:[locator getSystemId] withInt:[locator getLineNumber] withInt:[locator getColumnNumber]];
    }
    else {
      [self init__WithNSString:nil withNSString:nil withInt:-1 withInt:-1];
    }
    JreMemDebugAdd(self);
  }
  return self;
}

- (id)initWithNSString:(NSString *)message
  withOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)locator
 withJavaLangException:(JavaLangException *)e {
  if (self = [super initWithNSString:message withJavaLangException:e]) {
    if (locator != nil) {
      [self init__WithNSString:[locator getPublicId] withNSString:[locator getSystemId] withInt:[locator getLineNumber] withInt:[locator getColumnNumber]];
    }
    else {
      [self init__WithNSString:nil withNSString:nil withInt:-1 withInt:-1];
    }
    JreMemDebugAdd(self);
  }
  return self;
}

- (id)initWithNSString:(NSString *)message
          withNSString:(NSString *)publicId
          withNSString:(NSString *)systemId
               withInt:(int)lineNumber
               withInt:(int)columnNumber {
  if (self = [super initWithNSString:message]) {
    [self init__WithNSString:publicId withNSString:systemId withInt:lineNumber withInt:columnNumber];
    JreMemDebugAdd(self);
  }
  return self;
}

- (id)initWithNSString:(NSString *)message
          withNSString:(NSString *)publicId
          withNSString:(NSString *)systemId
               withInt:(int)lineNumber
               withInt:(int)columnNumber
 withJavaLangException:(JavaLangException *)e {
  if (self = [super initWithNSString:message withJavaLangException:e]) {
    [self init__WithNSString:publicId withNSString:systemId withInt:lineNumber withInt:columnNumber];
    JreMemDebugAdd(self);
  }
  return self;
}

- (void)init__WithNSString:(NSString *)publicId
              withNSString:(NSString *)systemId
                   withInt:(int)lineNumber
                   withInt:(int)columnNumber {
  OrgXmlSaxSAXParseException_set_publicId_(self, publicId);
  OrgXmlSaxSAXParseException_set_systemId_(self, systemId);
  self->lineNumber_ = lineNumber;
  self->columnNumber_ = columnNumber;
}

- (NSString *)getPublicId {
  return self->publicId_;
}

- (NSString *)getSystemId {
  return self->systemId_;
}

- (int)getLineNumber {
  return self->lineNumber_;
}

- (int)getColumnNumber {
  return self->columnNumber_;
}

- (void)dealloc {
  JreMemDebugRemove(self);
  OrgXmlSaxSAXParseException_set_systemId_(self, nil);
  OrgXmlSaxSAXParseException_set_publicId_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgXmlSaxSAXParseException *)other {
  [super copyAllFieldsTo:other];
  other->columnNumber_ = columnNumber_;
  other->lineNumber_ = lineNumber_;
  OrgXmlSaxSAXParseException_set_publicId_(other, publicId_);
  OrgXmlSaxSAXParseException_set_systemId_(other, systemId_);
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:publicId_ name:@"publicId"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:systemId_ name:@"systemId"]];
  return result;
}

@end
