//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/apache/harmony/xml/parsers/SAXParserImpl.java
//
//  Created by retechretech on 13-9-25.
//

#include "IOSClass.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Boolean.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/harmony/xml/parsers/SAXParserImpl.h"
#include "org/xml/sax/Parser.h"
#include "org/xml/sax/SAXException.h"
#include "org/xml/sax/SAXNotRecognizedException.h"
#include "org/xml/sax/SAXNotSupportedException.h"
#include "org/xml/sax/XMLReader.h"
#include "org/xml/sax/helpers/XMLReaderAdapter.h"
#include "org/xmlpull/v1/XmlPullParserException.h"
#include "org/xmlpull/v1/sax2/Driver.h"

@implementation OrgApacheHarmonyXmlParsersSAXParserImpl

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (id)initWithJavaUtilMap:(id<JavaUtilMap>)initialFeatures {
  if (self = [super init]) {
    OrgApacheHarmonyXmlParsersSAXParserImpl_set_initialFeatures_(self, [((id<JavaUtilMap>) nil_chk(initialFeatures)) isEmpty] ? ((id) [JavaUtilCollections emptyMap]) : [[[JavaUtilHashMap alloc] initWithJavaUtilMap:initialFeatures] autorelease]);
    [self resetInternal];
    JreMemDebugAdd(self);
  }
  return self;
}

+ (IOSObjectArray *)__exceptions_OrgApacheHarmonyXmlParsersSAXParserImplWithJavaUtilMap_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [OrgXmlSaxSAXNotRecognizedException getClass], [OrgXmlSaxSAXNotSupportedException getClass] } count:2 type:[IOSClass getClass]];
}

- (void)resetInternal {
  @try {
    OrgApacheHarmonyXmlParsersSAXParserImpl_set_reader_(self, [[[OrgXmlpullV1Sax2Driver alloc] init] autorelease]);
    for (id<JavaUtilMap_Entry> __strong entry in [((id<JavaUtilMap>) nil_chk(initialFeatures_)) entrySet]) {
      [reader_ setFeatureWithNSString:[((id<JavaUtilMap_Entry>) nil_chk(entry)) getKey] withBoolean:[((JavaLangBoolean *) nil_chk([entry getValue])) booleanValue]];
    }
  }
  @catch (OrgXmlpullV1XmlPullParserException *e) {
    @throw [[[OrgXmlSaxSAXNotRecognizedException alloc] initWithNSString:[((OrgXmlpullV1XmlPullParserException *) nil_chk(e)) description]] autorelease];
  }
}

+ (IOSObjectArray *)__exceptions_resetInternal {
  return [IOSObjectArray arrayWithObjects:(id[]) { [OrgXmlSaxSAXNotSupportedException getClass], [OrgXmlSaxSAXNotRecognizedException getClass] } count:2 type:[IOSClass getClass]];
}

- (void)reset {
  @try {
    [self resetInternal];
  }
  @catch (OrgXmlSaxSAXNotRecognizedException *e) {
    @throw [[[JavaLangAssertionError alloc] init] autorelease];
  }
  @catch (OrgXmlSaxSAXNotSupportedException *e) {
    @throw [[[JavaLangAssertionError alloc] init] autorelease];
  }
}

- (id<OrgXmlSaxParser>)getParser {
  if (parser_ == nil) {
    OrgApacheHarmonyXmlParsersSAXParserImpl_set_parser_(self, [[[OrgXmlSaxHelpersXMLReaderAdapter alloc] initWithOrgXmlSaxXMLReader:reader_] autorelease]);
  }
  return parser_;
}

- (id)getPropertyWithNSString:(NSString *)name {
  return [((id<OrgXmlSaxXMLReader>) nil_chk(reader_)) getPropertyWithNSString:name];
}

+ (IOSObjectArray *)__exceptions_getPropertyWithNSString_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [OrgXmlSaxSAXNotRecognizedException getClass], [OrgXmlSaxSAXNotSupportedException getClass] } count:2 type:[IOSClass getClass]];
}

- (id<OrgXmlSaxXMLReader>)getXMLReader {
  return reader_;
}

- (BOOL)isNamespaceAware {
  @try {
    return [((id<OrgXmlSaxXMLReader>) nil_chk(reader_)) getFeatureWithNSString:@"http://xml.org/sax/features/namespaces"];
  }
  @catch (OrgXmlSaxSAXException *ex) {
    return NO;
  }
}

- (BOOL)isValidating {
  return NO;
}

- (void)setPropertyWithNSString:(NSString *)name
                         withId:(id)value {
  [((id<OrgXmlSaxXMLReader>) nil_chk(reader_)) setPropertyWithNSString:name withId:value];
}

+ (IOSObjectArray *)__exceptions_setPropertyWithNSString_withId_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [OrgXmlSaxSAXNotRecognizedException getClass], [OrgXmlSaxSAXNotSupportedException getClass] } count:2 type:[IOSClass getClass]];
}

- (void)dealloc {
  JreMemDebugRemove(self);
  OrgApacheHarmonyXmlParsersSAXParserImpl_set_parser_(self, nil);
  OrgApacheHarmonyXmlParsersSAXParserImpl_set_reader_(self, nil);
  OrgApacheHarmonyXmlParsersSAXParserImpl_set_initialFeatures_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgApacheHarmonyXmlParsersSAXParserImpl *)other {
  [super copyAllFieldsTo:other];
  OrgApacheHarmonyXmlParsersSAXParserImpl_set_initialFeatures_(other, initialFeatures_);
  OrgApacheHarmonyXmlParsersSAXParserImpl_set_parser_(other, parser_);
  OrgApacheHarmonyXmlParsersSAXParserImpl_set_reader_(other, reader_);
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:initialFeatures_ name:@"initialFeatures"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:reader_ name:@"reader"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:parser_ name:@"parser"]];
  return result;
}

@end
