//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/security/AccessControlContext.h"
#include "java/security/AccessControlException.h"
#include "java/security/AccessController.h"
#include "java/security/Permission.h"
#include "java/security/PrivilegedAction.h"
#include "java/security/PrivilegedActionException.h"
#include "java/security/PrivilegedExceptionAction.h"

@implementation JavaSecurityAccessController

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (id)init {
  return JreMemDebugAdd([super init]);
}

+ (id)doPrivilegedWithJavaSecurityPrivilegedAction:(id<JavaSecurityPrivilegedAction>)action {
  return [((id<JavaSecurityPrivilegedAction>) nil_chk(action)) run];
}

+ (id)doPrivilegedWithJavaSecurityPrivilegedAction:(id<JavaSecurityPrivilegedAction>)action
              withJavaSecurityAccessControlContext:(JavaSecurityAccessControlContext *)context {
  return [((id<JavaSecurityPrivilegedAction>) nil_chk(action)) run];
}

+ (id)doPrivilegedWithJavaSecurityPrivilegedExceptionAction:(id<JavaSecurityPrivilegedExceptionAction>)action {
  @try {
    return [((id<JavaSecurityPrivilegedExceptionAction>) nil_chk(action)) run];
  }
  @catch (JavaLangRuntimeException *e) {
    @throw e;
  }
  @catch (JavaLangException *e) {
    @throw [[[JavaSecurityPrivilegedActionException alloc] initWithJavaLangException:e] autorelease];
  }
}

+ (IOSObjectArray *)__exceptions_doPrivilegedWithJavaSecurityPrivilegedExceptionAction_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [JavaSecurityPrivilegedActionException getClass] } count:1 type:[IOSClass getClass]];
}

+ (id)doPrivilegedWithJavaSecurityPrivilegedExceptionAction:(id<JavaSecurityPrivilegedExceptionAction>)action
                       withJavaSecurityAccessControlContext:(JavaSecurityAccessControlContext *)context {
  return [JavaSecurityAccessController doPrivilegedWithJavaSecurityPrivilegedExceptionAction:action];
}

+ (IOSObjectArray *)__exceptions_doPrivilegedWithJavaSecurityPrivilegedExceptionAction_withJavaSecurityAccessControlContext_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [JavaSecurityPrivilegedActionException getClass] } count:1 type:[IOSClass getClass]];
}

+ (id)doPrivilegedWithCombinerWithJavaSecurityPrivilegedAction:(id<JavaSecurityPrivilegedAction>)action {
  return [((id<JavaSecurityPrivilegedAction>) nil_chk(action)) run];
}

+ (id)doPrivilegedWithCombinerWithJavaSecurityPrivilegedExceptionAction:(id<JavaSecurityPrivilegedExceptionAction>)action {
  return [JavaSecurityAccessController doPrivilegedWithJavaSecurityPrivilegedExceptionAction:action];
}

+ (IOSObjectArray *)__exceptions_doPrivilegedWithCombinerWithJavaSecurityPrivilegedExceptionAction_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [JavaSecurityPrivilegedActionException getClass] } count:1 type:[IOSClass getClass]];
}

+ (void)checkPermissionWithJavaSecurityPermission:(JavaSecurityPermission *)permission {
}

+ (IOSObjectArray *)__exceptions_checkPermissionWithJavaSecurityPermission_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [JavaSecurityAccessControlException getClass] } count:1 type:[IOSClass getClass]];
}

+ (JavaSecurityAccessControlContext *)getContext {
  return [[[JavaSecurityAccessControlContext alloc] initWithJavaSecurityProtectionDomainArray:nil] autorelease];
}

@end
