//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "java/security/Permission.h"
#include "java/security/PermissionsHash.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"

@implementation JavaSecurityPermissionsHash

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (void)addWithJavaSecurityPermission:(JavaSecurityPermission *)permission {
  [((JavaUtilHashtable *) nil_chk(perms_)) putWithId:permission withId:permission];
}

- (id<JavaUtilEnumeration>)elements {
  return [((JavaUtilHashtable *) nil_chk(perms_)) elements];
}

- (BOOL)impliesWithJavaSecurityPermission:(JavaSecurityPermission *)permission {
  for (id<JavaUtilEnumeration> elements = [self elements]; [((id<JavaUtilEnumeration>) nil_chk(elements)) hasMoreElements]; ) {
    if ([((JavaSecurityPermission *) nil_chk([elements nextElement])) impliesWithJavaSecurityPermission:permission]) {
      return YES;
    }
  }
  return NO;
}

- (id)init {
  if (self = [super init]) {
    JavaSecurityPermissionsHash_set_perms_(self, [[[JavaUtilHashtable alloc] init] autorelease]);
    JreMemDebugAdd(self);
  }
  return self;
}

- (void)dealloc {
  JreMemDebugRemove(self);
  JavaSecurityPermissionsHash_set_perms_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(JavaSecurityPermissionsHash *)other {
  [super copyAllFieldsTo:other];
  JavaSecurityPermissionsHash_set_perms_(other, perms_);
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:perms_ name:@"perms"]];
  return result;
}

@end
