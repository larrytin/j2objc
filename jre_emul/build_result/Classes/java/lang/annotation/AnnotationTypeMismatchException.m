//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/annotation/AnnotationTypeMismatchException.java
//
//  Created by retechretech on 13-9-25.
//

#include "java/lang/annotation/AnnotationTypeMismatchException.h"
#include "java/lang/reflect/Method.h"

@implementation JavaLangAnnotationAnnotationTypeMismatchException

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (id)initWithJavaLangReflectMethod:(JavaLangReflectMethod *)element
                       withNSString:(NSString *)foundType {
  if (self = [super initWithNSString:[NSString stringWithFormat:@"The annotation element %@ doesn't match the type %@", element, foundType]]) {
    JavaLangAnnotationAnnotationTypeMismatchException_set_element__(self, element);
    JavaLangAnnotationAnnotationTypeMismatchException_set_foundType__(self, foundType);
    JreMemDebugAdd(self);
  }
  return self;
}

- (JavaLangReflectMethod *)element {
  return element__;
}

- (NSString *)foundType {
  return foundType__;
}

- (void)dealloc {
  JreMemDebugRemove(self);
  JavaLangAnnotationAnnotationTypeMismatchException_set_foundType__(self, nil);
  JavaLangAnnotationAnnotationTypeMismatchException_set_element__(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(JavaLangAnnotationAnnotationTypeMismatchException *)other {
  [super copyAllFieldsTo:other];
  JavaLangAnnotationAnnotationTypeMismatchException_set_element__(other, element__);
  JavaLangAnnotationAnnotationTypeMismatchException_set_foundType__(other, foundType__);
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:element__ name:@"element_"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:foundType__ name:@"foundType_"]];
  return result;
}

@end
