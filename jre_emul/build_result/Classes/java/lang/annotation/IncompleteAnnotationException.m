//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/annotation/IncompleteAnnotationException.java
//
//  Created by retechretech on 13-9-25.
//

#include "IOSClass.h"
#include "java/lang/annotation/IncompleteAnnotationException.h"

@implementation JavaLangAnnotationIncompleteAnnotationException

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (id)initWithIOSClass:(IOSClass *)annotationType
          withNSString:(NSString *)elementName {
  if (self = [super initWithNSString:[NSString stringWithFormat:@"The element %@ is not complete for the annotation %@", elementName, [((IOSClass *) nil_chk(annotationType)) getName]]]) {
    JavaLangAnnotationIncompleteAnnotationException_set_annotationType__(self, annotationType);
    JavaLangAnnotationIncompleteAnnotationException_set_elementName__(self, elementName);
    JreMemDebugAdd(self);
  }
  return self;
}

- (IOSClass *)annotationType {
  return annotationType__;
}

- (NSString *)elementName {
  return elementName__;
}

- (void)dealloc {
  JreMemDebugRemove(self);
  JavaLangAnnotationIncompleteAnnotationException_set_elementName__(self, nil);
  JavaLangAnnotationIncompleteAnnotationException_set_annotationType__(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(JavaLangAnnotationIncompleteAnnotationException *)other {
  [super copyAllFieldsTo:other];
  JavaLangAnnotationIncompleteAnnotationException_set_annotationType__(other, annotationType__);
  JavaLangAnnotationIncompleteAnnotationException_set_elementName__(other, elementName__);
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:annotationType__ name:@"annotationType_"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:elementName__ name:@"elementName_"]];
  return result;
}

@end
