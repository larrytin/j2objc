//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/nio/charset/Charsets.java
//
//  Created by retechretech on 13-9-25.
//

#include "IOSByteArray.h"
#include "IOSCharArray.h"
#include "java/nio/charset/Charset.h"
#include "java/nio/charset/Charsets.h"

@implementation JavaNioCharsetCharsets

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:JavaNioCharsetCharsets_ISO_8859_1_ name:@"JavaNioCharsetCharsets_ISO_8859_1_"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:JavaNioCharsetCharsets_US_ASCII_ name:@"JavaNioCharsetCharsets_US_ASCII_"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:JavaNioCharsetCharsets_UTF_8_ name:@"JavaNioCharsetCharsets_UTF_8_"]];
  return result;
}

static JavaNioCharsetCharset * JavaNioCharsetCharsets_ISO_8859_1_;
static JavaNioCharsetCharset * JavaNioCharsetCharsets_US_ASCII_;
static JavaNioCharsetCharset * JavaNioCharsetCharsets_UTF_8_;

+ (JavaNioCharsetCharset *)ISO_8859_1 {
  return JavaNioCharsetCharsets_ISO_8859_1_;
}

+ (JavaNioCharsetCharset *)US_ASCII {
  return JavaNioCharsetCharsets_US_ASCII_;
}

+ (JavaNioCharsetCharset *)UTF_8 {
  return JavaNioCharsetCharsets_UTF_8_;
}

+ (IOSByteArray *)toBigEndianUtf16BytesWithCharArray:(IOSCharArray *)chars
                                             withInt:(int)offset
                                             withInt:(int)length {
  IOSByteArray *result = [IOSByteArray arrayWithLength:length * 2];
  int end = offset + length;
  int resultIndex = 0;
  for (int i = offset; i < end; ++i) {
    unichar ch = IOSCharArray_Get(nil_chk(chars), i);
    (*IOSByteArray_GetRef(result, resultIndex++)) = (char) (ch >> 8);
    (*IOSByteArray_GetRef(result, resultIndex++)) = (char) ch;
  }
  return result;
}

- (id)init {
  return JreMemDebugAdd([super init]);
}

+ (void)initialize {
  if (self == [JavaNioCharsetCharsets class]) {
    JreOperatorRetainedAssign(&JavaNioCharsetCharsets_ISO_8859_1_, nil, [JavaNioCharsetCharset forNameWithNSString:@"ISO-8859-1"]);
    JreOperatorRetainedAssign(&JavaNioCharsetCharsets_US_ASCII_, nil, [JavaNioCharsetCharset forNameWithNSString:@"US-ASCII"]);
    JreOperatorRetainedAssign(&JavaNioCharsetCharsets_UTF_8_, nil, [JavaNioCharsetCharset forNameWithNSString:@"UTF-8"]);
  }
}

@end
