//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSByteArray.h"
#include "IOSCharArray.h"
#include "IOSDoubleArray.h"
#include "IOSFloatArray.h"
#include "IOSIntArray.h"
#include "IOSLongArray.h"
#include "IOSShortArray.h"
#include "java/lang/CharSequence.h"
#include "java/lang/RuntimeException.h"
#include "java/nio/BufferFactory.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/CharBuffer.h"
#include "java/nio/CharSequenceAdapter.h"
#include "java/nio/DoubleBuffer.h"
#include "java/nio/FloatBuffer.h"
#include "java/nio/IntBuffer.h"
#include "java/nio/LongBuffer.h"
#include "java/nio/ReadWriteCharArrayBuffer.h"
#include "java/nio/ReadWriteDoubleArrayBuffer.h"
#include "java/nio/ReadWriteFloatArrayBuffer.h"
#include "java/nio/ReadWriteHeapByteBuffer.h"
#include "java/nio/ReadWriteIntArrayBuffer.h"
#include "java/nio/ReadWriteLongArrayBuffer.h"
#include "java/nio/ReadWriteShortArrayBuffer.h"
#include "java/nio/ShortBuffer.h"

@implementation JavaNioBufferFactory

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

+ (JavaNioByteBuffer *)newByteBufferWithByteArray:(IOSByteArray *)array {
  return [[[JavaNioReadWriteHeapByteBuffer alloc] initWithByteArray:array] autorelease];
}

+ (JavaNioByteBuffer *)newByteBufferWithInt:(int)capacity {
  return [[[JavaNioReadWriteHeapByteBuffer alloc] initWithInt:capacity] autorelease];
}

+ (JavaNioCharBuffer *)newCharBufferWithCharArray:(IOSCharArray *)array {
  return [[[JavaNioReadWriteCharArrayBuffer alloc] initWithCharArray:array] autorelease];
}

+ (JavaNioCharBuffer *)newCharBufferWithJavaLangCharSequence:(id<JavaLangCharSequence>)chseq {
  return [[[JavaNioCharSequenceAdapter alloc] initWithJavaLangCharSequence:chseq] autorelease];
}

+ (JavaNioCharBuffer *)newCharBufferWithInt:(int)capacity {
  return [[[JavaNioReadWriteCharArrayBuffer alloc] initWithInt:capacity] autorelease];
}

+ (JavaNioByteBuffer *)newDirectByteBufferWithInt:(int)capacity {
  @throw [[[JavaLangRuntimeException alloc] initWithNSString:@"newDirectByteBuffer(capacity);"] autorelease];
}

+ (JavaNioDoubleBuffer *)newDoubleBufferWithDoubleArray:(IOSDoubleArray *)array {
  return [[[JavaNioReadWriteDoubleArrayBuffer alloc] initWithDoubleArray:array] autorelease];
}

+ (JavaNioDoubleBuffer *)newDoubleBufferWithInt:(int)capacity {
  return [[[JavaNioReadWriteDoubleArrayBuffer alloc] initWithInt:capacity] autorelease];
}

+ (JavaNioFloatBuffer *)newFloatBufferWithFloatArray:(IOSFloatArray *)array {
  return [[[JavaNioReadWriteFloatArrayBuffer alloc] initWithFloatArray:array] autorelease];
}

+ (JavaNioFloatBuffer *)newFloatBufferWithInt:(int)capacity {
  return [[[JavaNioReadWriteFloatArrayBuffer alloc] initWithInt:capacity] autorelease];
}

+ (JavaNioIntBuffer *)newIntBufferWithInt:(int)capacity {
  return [[[JavaNioReadWriteIntArrayBuffer alloc] initWithInt:capacity] autorelease];
}

+ (JavaNioIntBuffer *)newIntBufferWithIntArray:(IOSIntArray *)array {
  return [[[JavaNioReadWriteIntArrayBuffer alloc] initWithIntArray:array] autorelease];
}

+ (JavaNioLongBuffer *)newLongBufferWithInt:(int)capacity {
  return [[[JavaNioReadWriteLongArrayBuffer alloc] initWithInt:capacity] autorelease];
}

+ (JavaNioLongBuffer *)newLongBufferWithLongArray:(IOSLongArray *)array {
  return [[[JavaNioReadWriteLongArrayBuffer alloc] initWithLongArray:array] autorelease];
}

+ (JavaNioShortBuffer *)newShortBufferWithInt:(int)capacity {
  return [[[JavaNioReadWriteShortArrayBuffer alloc] initWithInt:capacity] autorelease];
}

+ (JavaNioShortBuffer *)newShortBufferWithShortArray:(IOSShortArray *)array {
  return [[[JavaNioReadWriteShortArrayBuffer alloc] initWithShortArray:array] autorelease];
}

- (id)init {
  return JreMemDebugAdd([super init]);
}

@end
