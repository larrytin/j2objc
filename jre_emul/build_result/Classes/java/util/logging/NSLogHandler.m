//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "java/lang/StringBuffer.h"
#include "java/util/logging/Handler.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/LogRecord.h"
#include "java/util/logging/NSLogHandler.h"
#import "java/lang/Throwable.h"

@implementation JavaUtilLoggingNSLogHandler

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (id)init {
  if (self = [super init]) {
    [self setFormatterWithJavaUtilLoggingFormatter:[[[JavaUtilLoggingNSLogHandler_NSLogFormatter alloc] init] autorelease]];
    JreMemDebugAdd(self);
  }
  return self;
}

- (void)close {
}

- (void)flush {
}

- (void)publishWithJavaUtilLoggingLogRecord:(JavaUtilLoggingLogRecord *)record {
  if (![self isLoggableWithJavaUtilLoggingLogRecord:record]) {
    return;
  }
  [self logWithJavaUtilLoggingLogRecord:record];
}

- (void)logWithJavaUtilLoggingLogRecord:(JavaUtilLoggingLogRecord *)record {
  NSLog(@"%@: %@", [NSThread currentThread],
  [[self getFormatter] formatWithJavaUtilLoggingLogRecord:record]);
  [[record getThrown] printStackTrace];
  
  // TODO(user): replace NSLog above with stderr below, once desired format
  // is decided.
  //    NSString *msg =
  //        [[self getFormatter] formatWithJavaUtilLoggingLogRecord:record];
  //    const char *cmsg = [msg cStringUsingEncoding:NSASCIIStringEncoding];
  //    fprintf(stderr, "%s\n", cmsg);
}

@end
@implementation JavaUtilLoggingNSLogHandler_NSLogFormatter

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (NSString *)formatWithJavaUtilLoggingLogRecord:(JavaUtilLoggingLogRecord *)record {
  JavaLangStringBuffer *sb = [[[JavaLangStringBuffer alloc] init] autorelease];
  [sb appendWithNSString:[((JavaUtilLoggingLogRecord *) nil_chk(record)) getLoggerName]];
  [sb appendWithNSString:@": "];
  [sb appendWithNSString:[((JavaUtilLoggingLevel *) nil_chk([record getLevel])) getLocalizedName]];
  [sb appendWithNSString:@": "];
  [sb appendWithNSString:[record getMessage]];
  return [sb description];
}

- (id)init {
  return JreMemDebugAdd([super init]);
}

@end
