//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSCharArray.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Arrays.h"
#include "java/util/regex/PatternSyntaxException.h"

@implementation JavaUtilRegexPatternSyntaxException

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (id)initWithNSString:(NSString *)description_
          withNSString:(NSString *)pattern
               withInt:(int)index {
  if (self = [super init]) {
    index_ = -1;
    JavaUtilRegexPatternSyntaxException_set_desc_(self, description_);
    JavaUtilRegexPatternSyntaxException_set_pattern_(self, pattern);
    self->index_ = index;
    JreMemDebugAdd(self);
  }
  return self;
}

- (NSString *)getPattern {
  return pattern_;
}

- (NSString *)getMessage {
  JavaLangStringBuilder *sb = [[[JavaLangStringBuilder alloc] init] autorelease];
  if (desc_ != nil) {
    [sb appendWithNSString:desc_];
  }
  if (index_ >= 0) {
    if (desc_ != nil) {
      [sb appendWithChar:' '];
    }
    [sb appendWithNSString:@"near index "];
    [sb appendWithInt:index_];
    [sb appendWithChar:':'];
  }
  if (pattern_ != nil) {
    [sb appendWithChar:0x000a];
    [sb appendWithNSString:pattern_];
    if (index_ >= 0) {
      IOSCharArray *spaces = [IOSCharArray arrayWithLength:index_];
      [JavaUtilArrays fillWithCharArray:spaces withChar:' '];
      [sb appendWithChar:0x000a];
      [sb appendWithCharArray:spaces];
      [sb appendWithChar:'^'];
    }
  }
  return [sb description];
}

- (NSString *)getDescription {
  return desc_;
}

- (int)getIndex {
  return index_;
}

- (void)dealloc {
  JreMemDebugRemove(self);
  JavaUtilRegexPatternSyntaxException_set_pattern_(self, nil);
  JavaUtilRegexPatternSyntaxException_set_desc_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(JavaUtilRegexPatternSyntaxException *)other {
  [super copyAllFieldsTo:other];
  JavaUtilRegexPatternSyntaxException_set_desc_(other, desc_);
  other->index_ = index_;
  JavaUtilRegexPatternSyntaxException_set_pattern_(other, pattern_);
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:desc_ name:@"desc"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:pattern_ name:@"pattern"]];
  return result;
}

@end
