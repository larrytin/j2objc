//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/sql/Date.java
//
//  Created by retechretech on 13-9-4.
//

#include "IOSClass.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/sql/Date.h"
#include "java/util/Date.h"

@implementation JavaSqlDate

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:JavaSqlDate_PADDING_ name:@"JavaSqlDate_PADDING_"]];
  return result;
}

static NSString * JavaSqlDate_PADDING_ = @"0000";

+ (NSString *)PADDING {
  return JavaSqlDate_PADDING_;
}

- (id)initWithInt:(int)theYear
          withInt:(int)theMonth
          withInt:(int)theDay {
  return JreMemDebugAdd([super initWithInt:theYear withInt:theMonth withInt:theDay]);
}

- (id)initWithLongInt:(long long int)theDate {
  return JreMemDebugAdd([super initWithLongInt:[JavaSqlDate normalizeTimeWithLongInt:theDate]]);
}

- (int)getHours {
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:@"unimplemented"] autorelease];
}

- (int)getMinutes {
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:@"unimplemented"] autorelease];
}

- (int)getSeconds {
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:@"unimplemented"] autorelease];
}

- (void)setHoursWithInt:(int)theHours {
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:@"unimplemented"] autorelease];
}

- (void)setMinutesWithInt:(int)theMinutes {
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:@"unimplemented"] autorelease];
}

- (void)setSecondsWithInt:(int)theSeconds {
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:@"unimplemented"] autorelease];
}

- (void)setTimeWithLongInt:(long long int)theTime {
  [super setTimeWithLongInt:[JavaSqlDate normalizeTimeWithLongInt:theTime]];
}

- (NSString *)description {
  JavaLangStringBuilder *sb = [[[JavaLangStringBuilder alloc] initWithInt:10] autorelease];
  [self formatWithInt:([self getYear] + 1900) withInt:4 withJavaLangStringBuilder:sb];
  [sb appendWithUnichar:'-'];
  [self formatWithInt:([self getMonth] + 1) withInt:2 withJavaLangStringBuilder:sb];
  [sb appendWithUnichar:'-'];
  [self formatWithInt:[self getDate] withInt:2 withJavaLangStringBuilder:sb];
  return [sb description];
}

- (void)formatWithInt:(int)date
              withInt:(int)digits
withJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  NSString *str = [NSString valueOfInt:date];
  if (digits - [((NSString *) nil_chk(str)) length] > 0) {
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:[((NSString *) nil_chk(JavaSqlDate_PADDING_)) substring:0 endIndex:digits - [str length]]];
  }
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:str];
}

+ (JavaSqlDate *)valueOfWithNSString:(NSString *)dateString {
  if (dateString == nil) {
    @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:@"dateString == null"] autorelease];
  }
  int firstIndex = [((NSString *) nil_chk(dateString)) indexOf:'-'];
  int secondIndex = [dateString indexOf:'-' fromIndex:firstIndex + 1];
  if (secondIndex == -1 || firstIndex == 0 || secondIndex + 1 == [dateString length]) {
    @throw [[[JavaLangIllegalArgumentException alloc] init] autorelease];
  }
  int year = [JavaLangInteger parseIntWithNSString:[dateString substring:0 endIndex:firstIndex]];
  int month = [JavaLangInteger parseIntWithNSString:[dateString substring:firstIndex + 1 endIndex:secondIndex]];
  int day = [JavaLangInteger parseIntWithNSString:[dateString substring:secondIndex + 1 endIndex:[dateString length]]];
  return [[[JavaSqlDate alloc] initWithInt:year - 1900 withInt:month - 1 withInt:day] autorelease];
}

+ (long long int)normalizeTimeWithLongInt:(long long int)theTime {
  return theTime;
}

+ (IOSObjectArray *)__annotations_JavaSqlDateWithInt_withInt_withInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecatedImpl alloc] init] autorelease] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_getHours {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecatedImpl alloc] init] autorelease] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_getMinutes {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecatedImpl alloc] init] autorelease] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_getSeconds {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecatedImpl alloc] init] autorelease] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_setHoursWithInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecatedImpl alloc] init] autorelease] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_setMinutesWithInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecatedImpl alloc] init] autorelease] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_setSecondsWithInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecatedImpl alloc] init] autorelease] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

@end
