//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "junit/framework/JUnit4TestAdapter.h"
#include "junit/framework/JUnit4TestAdapterCache.h"
#include "junit/framework/TestResult.h"
#include "org/junit/Ignore.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runner/Request.h"
#include "org/junit/runner/Runner.h"
#include "org/junit/runner/manipulation/Filter.h"
#include "org/junit/runner/manipulation/NoTestsRemainException.h"
#include "org/junit/runner/manipulation/Sorter.h"
#include "org/junit/runner/notification/RunNotifier.h"

@implementation JunitFrameworkJUnit4TestAdapter

- (id)initWithIOSClass:(IOSClass *)newTestClass {
  return [self initJunitFrameworkJUnit4TestAdapterWithIOSClass:newTestClass withJunitFrameworkJUnit4TestAdapterCache:[JunitFrameworkJUnit4TestAdapterCache getDefault]];
}

- (id)initJunitFrameworkJUnit4TestAdapterWithIOSClass:(IOSClass *)newTestClass
             withJunitFrameworkJUnit4TestAdapterCache:(JunitFrameworkJUnit4TestAdapterCache *)cache {
  if (self = [super init]) {
    JunitFrameworkJUnit4TestAdapter_set_fCache_(self, cache);
    JunitFrameworkJUnit4TestAdapter_set_fNewTestClass_(self, newTestClass);
    JunitFrameworkJUnit4TestAdapter_set_fRunner_(self, [((OrgJunitRunnerRequest *) nil_chk([OrgJunitRunnerRequest classWithoutSuiteMethodWithIOSClass:newTestClass])) getRunner]);
  }
  return self;
}

- (id)initWithIOSClass:(IOSClass *)newTestClass
withJunitFrameworkJUnit4TestAdapterCache:(JunitFrameworkJUnit4TestAdapterCache *)cache {
  return [self initJunitFrameworkJUnit4TestAdapterWithIOSClass:newTestClass withJunitFrameworkJUnit4TestAdapterCache:cache];
}

- (int)countTestCases {
  return [((OrgJunitRunnerRunner *) nil_chk(fRunner_)) testCount];
}

- (void)runWithJunitFrameworkTestResult:(JunitFrameworkTestResult *)result {
  [((OrgJunitRunnerRunner *) nil_chk(fRunner_)) runWithOrgJunitRunnerNotificationRunNotifier:[((JunitFrameworkJUnit4TestAdapterCache *) nil_chk(fCache_)) getNotifierWithJunitFrameworkTestResult:result withJunitFrameworkJUnit4TestAdapter:self]];
}

- (id<JavaUtilList>)getTests {
  return [((JunitFrameworkJUnit4TestAdapterCache *) nil_chk(fCache_)) asTestListWithOrgJunitRunnerDescription:[self getDescription]];
}

- (IOSClass *)getTestClass {
  return fNewTestClass_;
}

- (OrgJunitRunnerDescription *)getDescription {
  OrgJunitRunnerDescription *description_ = [((OrgJunitRunnerRunner *) nil_chk(fRunner_)) getDescription];
  return [self removeIgnoredWithOrgJunitRunnerDescription:description_];
}

- (OrgJunitRunnerDescription *)removeIgnoredWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  if ([self isIgnoredWithOrgJunitRunnerDescription:description_]) return [OrgJunitRunnerDescription EMPTY];
  OrgJunitRunnerDescription *result = [((OrgJunitRunnerDescription *) nil_chk(description_)) childlessCopy];
  for (OrgJunitRunnerDescription * __strong each in [description_ getChildren]) {
    OrgJunitRunnerDescription *child = [self removeIgnoredWithOrgJunitRunnerDescription:each];
    if (![((OrgJunitRunnerDescription *) nil_chk(child)) isEmpty]) [((OrgJunitRunnerDescription *) nil_chk(result)) addChildWithOrgJunitRunnerDescription:child];
  }
  return result;
}

- (BOOL)isIgnoredWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  return [((OrgJunitRunnerDescription *) nil_chk(description_)) getAnnotationWithIOSClass:[IOSClass classWithProtocol:@protocol(OrgJunitIgnore)]] != nil;
}

- (NSString *)description {
  return [((IOSClass *) nil_chk(fNewTestClass_)) getName];
}

- (void)filterWithOrgJunitRunnerManipulationFilter:(OrgJunitRunnerManipulationFilter *)filter {
  [((OrgJunitRunnerManipulationFilter *) nil_chk(filter)) applyWithId:fRunner_];
}

+ (IOSObjectArray *)__exceptions_filterWithOrgJunitRunnerManipulationFilter_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [OrgJunitRunnerManipulationNoTestsRemainException getClass] } count:1 type:[IOSClass getClass]];
}

- (void)sortWithOrgJunitRunnerManipulationSorter:(OrgJunitRunnerManipulationSorter *)sorter {
  [((OrgJunitRunnerManipulationSorter *) nil_chk(sorter)) applyWithId:fRunner_];
}

- (void)dealloc {
  JunitFrameworkJUnit4TestAdapter_set_fCache_(self, nil);
  JunitFrameworkJUnit4TestAdapter_set_fRunner_(self, nil);
  JunitFrameworkJUnit4TestAdapter_set_fNewTestClass_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(JunitFrameworkJUnit4TestAdapter *)other {
  [super copyAllFieldsTo:other];
  JunitFrameworkJUnit4TestAdapter_set_fCache_(other, fCache_);
  JunitFrameworkJUnit4TestAdapter_set_fNewTestClass_(other, fNewTestClass_);
  JunitFrameworkJUnit4TestAdapter_set_fRunner_(other, fRunner_);
}

@end
