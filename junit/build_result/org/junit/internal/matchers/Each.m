//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "org/hamcrest/CoreMatchers.h"
#include "org/hamcrest/Description.h"
#include "org/hamcrest/Matcher.h"
#include "org/junit/internal/matchers/Each.h"
#include "org/junit/internal/matchers/IsCollectionContaining.h"

@implementation OrgJunitInternalMatchersEach

+ (id<OrgHamcrestMatcher>)eachWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)individual {
  id<OrgHamcrestMatcher> allItemsAre = [OrgHamcrestCoreMatchers not__WithOrgHamcrestMatcher:[OrgJunitInternalMatchersIsCollectionContaining hasItemWithOrgHamcrestMatcher:[OrgHamcrestCoreMatchers not__WithOrgHamcrestMatcher:individual]]];
  return [[[OrgJunitInternalMatchersEach_$1 alloc] initWithOrgHamcrestMatcher:allItemsAre withOrgHamcrestMatcher:individual] autorelease];
}

- (id)init {
  return [super init];
}

@end
@implementation OrgJunitInternalMatchersEach_$1

- (BOOL)matchesWithId:(id)item {
  return [((id<OrgHamcrestMatcher>) nil_chk(val$allItemsAre_)) matchesWithId:item];
}

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:@"each "];
  [((id<OrgHamcrestMatcher>) nil_chk(val$individual_)) describeToWithOrgHamcrestDescription:description_];
}

- (id)initWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)capture$0
          withOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)capture$1 {
  OrgJunitInternalMatchersEach_$1_set_val$allItemsAre_(self, capture$0);
  OrgJunitInternalMatchersEach_$1_set_val$individual_(self, capture$1);
  return [super init];
}

- (void)dealloc {
  OrgJunitInternalMatchersEach_$1_set_val$individual_(self, nil);
  OrgJunitInternalMatchersEach_$1_set_val$allItemsAre_(self, nil);
  [super dealloc];
}

@end
