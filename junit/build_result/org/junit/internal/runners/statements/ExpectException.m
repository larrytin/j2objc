//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/retechretech/dev/tools/lib/j2objc/junit/build_result/java/org/junit/internal/runners/statements/ExpectException.java
//
//  Created by retechretech on 13-9-25.
//

#include "IOSClass.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "org/junit/internal/AssumptionViolatedException.h"
#include "org/junit/internal/runners/statements/ExpectException.h"
#include "org/junit/runners/model/Statement.h"

@implementation OrgJunitInternalRunnersStatementsExpectException

- (id)initWithOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)next
                               withIOSClass:(IOSClass *)expected {
  if (self = [super init]) {
    OrgJunitInternalRunnersStatementsExpectException_set_fNext_(self, next);
    OrgJunitInternalRunnersStatementsExpectException_set_fExpected_(self, expected);
  }
  return self;
}

- (void)evaluate {
  BOOL complete = NO;
  @try {
    [((OrgJunitRunnersModelStatement *) nil_chk(fNext_)) evaluate];
    complete = YES;
  }
  @catch (OrgJunitInternalAssumptionViolatedException *e) {
    @throw e;
  }
  @catch (JavaLangThrowable *e) {
    if (![nil_chk(fExpected_) isAssignableFrom:[((JavaLangThrowable *) nil_chk(e)) getClass]]) {
      NSString *message = [NSString stringWithFormat:@"Unexpected exception, expected<%@> but was<%@>", [fExpected_ getName], [[e getClass] getName]];
      @throw [[[JavaLangException alloc] initWithNSString:message withJavaLangThrowable:e] autorelease];
    }
  }
  if (complete) @throw [[[JavaLangAssertionError alloc] initWithId:[NSString stringWithFormat:@"Expected exception: %@", [((IOSClass *) nil_chk(fExpected_)) getName]]] autorelease];
}

+ (IOSObjectArray *)__exceptions_evaluate {
  return [IOSObjectArray arrayWithObjects:(id[]) { [JavaLangException getClass] } count:1 type:[IOSClass getClass]];
}

- (void)dealloc {
  OrgJunitInternalRunnersStatementsExpectException_set_fExpected_(self, nil);
  OrgJunitInternalRunnersStatementsExpectException_set_fNext_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJunitInternalRunnersStatementsExpectException *)other {
  [super copyAllFieldsTo:other];
  OrgJunitInternalRunnersStatementsExpectException_set_fExpected_(other, fExpected_);
  OrgJunitInternalRunnersStatementsExpectException_set_fNext_(other, fNext_);
}

@end
