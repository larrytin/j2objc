//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/Throwable.h"
#include "java/util/List.h"
#include "org/junit/internal/runners/statements/RunBefores.h"
#include "org/junit/runners/model/FrameworkMethod.h"
#include "org/junit/runners/model/Statement.h"

@implementation OrgJunitInternalRunnersStatementsRunBefores

- (id)initWithOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)next
                           withJavaUtilList:(id<JavaUtilList>)befores
                                     withId:(id)target {
  if (self = [super init]) {
    OrgJunitInternalRunnersStatementsRunBefores_set_fNext_(self, next);
    OrgJunitInternalRunnersStatementsRunBefores_set_fBefores_(self, befores);
    OrgJunitInternalRunnersStatementsRunBefores_set_fTarget_(self, target);
  }
  return self;
}

- (void)evaluate {
  for (OrgJunitRunnersModelFrameworkMethod * __strong before in fBefores_) [((OrgJunitRunnersModelFrameworkMethod *) nil_chk(before)) invokeExplosivelyWithId:fTarget_ withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
  [((OrgJunitRunnersModelStatement *) nil_chk(fNext_)) evaluate];
}

+ (IOSObjectArray *)__exceptions_evaluate {
  return [IOSObjectArray arrayWithObjects:(id[]) { [JavaLangThrowable getClass] } count:1 type:[IOSClass getClass]];
}

- (void)dealloc {
  OrgJunitInternalRunnersStatementsRunBefores_set_fBefores_(self, nil);
  OrgJunitInternalRunnersStatementsRunBefores_set_fTarget_(self, nil);
  OrgJunitInternalRunnersStatementsRunBefores_set_fNext_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJunitInternalRunnersStatementsRunBefores *)other {
  [super copyAllFieldsTo:other];
  OrgJunitInternalRunnersStatementsRunBefores_set_fBefores_(other, fBefores_);
  OrgJunitInternalRunnersStatementsRunBefores_set_fNext_(other, fNext_);
  OrgJunitInternalRunnersStatementsRunBefores_set_fTarget_(other, fTarget_);
}

@end
