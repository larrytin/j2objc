//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/List.h"
#include "org/junit/ClassRule.h"
#include "org/junit/Rule.h"
#include "org/junit/internal/runners/rules/RuleFieldValidator.h"
#include "org/junit/rules/MethodRule.h"
#include "org/junit/rules/TestRule.h"
#include "org/junit/runners/model/FrameworkField.h"
#include "org/junit/runners/model/TestClass.h"


static OrgJunitInternalRunnersRulesRuleFieldValidatorEnum *OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_CLASS_RULE_VALIDATOR;
static OrgJunitInternalRunnersRulesRuleFieldValidatorEnum *OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_RULE_VALIDATOR;
IOSObjectArray *OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_values;

@implementation OrgJunitInternalRunnersRulesRuleFieldValidatorEnum

+ (OrgJunitInternalRunnersRulesRuleFieldValidatorEnum *)CLASS_RULE_VALIDATOR {
  return OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_CLASS_RULE_VALIDATOR;
}
+ (OrgJunitInternalRunnersRulesRuleFieldValidatorEnum *)RULE_VALIDATOR {
  return OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_RULE_VALIDATOR;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

- (id)initWithIOSClass:(IOSClass *)annotation
           withBoolean:(BOOL)onlyStaticFields
          withNSString:(NSString *)__name
               withInt:(int)__ordinal {
  if ((self = [super initWithNSString:__name withInt:__ordinal])) {
    OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_set_fAnnotation_(self, annotation);
    self->fOnlyStaticFields_ = onlyStaticFields;
  }
  return self;
}

- (void)validateWithOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)target
                                 withJavaUtilList:(id<JavaUtilList>)errors {
  id<JavaUtilList> fields = [((OrgJunitRunnersModelTestClass *) nil_chk(target)) getAnnotatedFieldsWithIOSClass:fAnnotation_];
  for (OrgJunitRunnersModelFrameworkField * __strong each in fields) [self validateFieldWithOrgJunitRunnersModelFrameworkField:each withJavaUtilList:errors];
}

- (void)validateFieldWithOrgJunitRunnersModelFrameworkField:(OrgJunitRunnersModelFrameworkField *)field
                                           withJavaUtilList:(id<JavaUtilList>)errors {
  [self optionallyValidateStaticWithOrgJunitRunnersModelFrameworkField:field withJavaUtilList:errors];
  [self validatePublicWithOrgJunitRunnersModelFrameworkField:field withJavaUtilList:errors];
  [self validateTestRuleOrMethodRuleWithOrgJunitRunnersModelFrameworkField:field withJavaUtilList:errors];
}

- (void)optionallyValidateStaticWithOrgJunitRunnersModelFrameworkField:(OrgJunitRunnersModelFrameworkField *)field
                                                      withJavaUtilList:(id<JavaUtilList>)errors {
  if (fOnlyStaticFields_ && ![((OrgJunitRunnersModelFrameworkField *) nil_chk(field)) isStatic]) [self addErrorWithJavaUtilList:errors withOrgJunitRunnersModelFrameworkField:field withNSString:@"must be static."];
}

- (void)validatePublicWithOrgJunitRunnersModelFrameworkField:(OrgJunitRunnersModelFrameworkField *)field
                                            withJavaUtilList:(id<JavaUtilList>)errors {
  if (![((OrgJunitRunnersModelFrameworkField *) nil_chk(field)) isPublic]) [self addErrorWithJavaUtilList:errors withOrgJunitRunnersModelFrameworkField:field withNSString:@"must be public."];
}

- (void)validateTestRuleOrMethodRuleWithOrgJunitRunnersModelFrameworkField:(OrgJunitRunnersModelFrameworkField *)field
                                                          withJavaUtilList:(id<JavaUtilList>)errors {
  if (![self isMethodRuleWithOrgJunitRunnersModelFrameworkField:field] && ![self isTestRuleWithOrgJunitRunnersModelFrameworkField:field]) [self addErrorWithJavaUtilList:errors withOrgJunitRunnersModelFrameworkField:field withNSString:@"must implement MethodRule or TestRule."];
}

- (BOOL)isTestRuleWithOrgJunitRunnersModelFrameworkField:(OrgJunitRunnersModelFrameworkField *)target {
  return [[IOSClass classWithProtocol:@protocol(OrgJunitRulesTestRule)] isAssignableFrom:[((OrgJunitRunnersModelFrameworkField *) nil_chk(target)) getType]];
}

- (BOOL)isMethodRuleWithOrgJunitRunnersModelFrameworkField:(OrgJunitRunnersModelFrameworkField *)target {
  return [[IOSClass classWithProtocol:@protocol(OrgJunitRulesMethodRule)] isAssignableFrom:[((OrgJunitRunnersModelFrameworkField *) nil_chk(target)) getType]];
}

- (void)addErrorWithJavaUtilList:(id<JavaUtilList>)errors
withOrgJunitRunnersModelFrameworkField:(OrgJunitRunnersModelFrameworkField *)field
                    withNSString:(NSString *)suffix {
  NSString *message = [NSString stringWithFormat:@"The @%@ '%@' %@", [((IOSClass *) nil_chk(fAnnotation_)) getSimpleName], [((OrgJunitRunnersModelFrameworkField *) nil_chk(field)) getName], suffix];
  [((id<JavaUtilList>) nil_chk(errors)) addWithId:[[[JavaLangException alloc] initWithNSString:message] autorelease]];
}

+ (void)initialize {
  if (self == [OrgJunitInternalRunnersRulesRuleFieldValidatorEnum class]) {
    OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_CLASS_RULE_VALIDATOR = [[OrgJunitInternalRunnersRulesRuleFieldValidatorEnum alloc] initWithIOSClass:[IOSClass classWithProtocol:@protocol(OrgJunitClassRule)] withBoolean:YES withNSString:@"OrgJunitInternalRunnersRulesRuleFieldValidator_CLASS_RULE_VALIDATOR" withInt:0];
    OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_RULE_VALIDATOR = [[OrgJunitInternalRunnersRulesRuleFieldValidatorEnum alloc] initWithIOSClass:[IOSClass classWithProtocol:@protocol(OrgJunitRule)] withBoolean:NO withNSString:@"OrgJunitInternalRunnersRulesRuleFieldValidator_RULE_VALIDATOR" withInt:1];
    OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_CLASS_RULE_VALIDATOR, OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_RULE_VALIDATOR, nil } count:2 type:[IOSClass classWithClass:[OrgJunitInternalRunnersRulesRuleFieldValidatorEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_values];
}

+ (OrgJunitInternalRunnersRulesRuleFieldValidatorEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_values count]; i++) {
    OrgJunitInternalRunnersRulesRuleFieldValidatorEnum *e = OrgJunitInternalRunnersRulesRuleFieldValidatorEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

@end
