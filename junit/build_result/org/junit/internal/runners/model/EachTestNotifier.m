//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "java/lang/Throwable.h"
#include "java/util/List.h"
#include "org/junit/internal/AssumptionViolatedException.h"
#include "org/junit/internal/runners/model/EachTestNotifier.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runner/notification/Failure.h"
#include "org/junit/runner/notification/RunNotifier.h"
#include "org/junit/runners/model/MultipleFailureException.h"

@implementation OrgJunitInternalRunnersModelEachTestNotifier

- (id)initWithOrgJunitRunnerNotificationRunNotifier:(OrgJunitRunnerNotificationRunNotifier *)notifier
                      withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  if (self = [super init]) {
    OrgJunitInternalRunnersModelEachTestNotifier_set_fNotifier_(self, notifier);
    OrgJunitInternalRunnersModelEachTestNotifier_set_fDescription_(self, description_);
  }
  return self;
}

- (void)addFailureWithJavaLangThrowable:(JavaLangThrowable *)targetException {
  if ([targetException isKindOfClass:[OrgJunitRunnersModelMultipleFailureException class]]) {
    [self addMultipleFailureExceptionWithOrgJunitRunnersModelMultipleFailureException:(OrgJunitRunnersModelMultipleFailureException *) check_class_cast(targetException, [OrgJunitRunnersModelMultipleFailureException class])];
  }
  else {
    [((OrgJunitRunnerNotificationRunNotifier *) nil_chk(fNotifier_)) fireTestFailureWithOrgJunitRunnerNotificationFailure:[[[OrgJunitRunnerNotificationFailure alloc] initWithOrgJunitRunnerDescription:fDescription_ withJavaLangThrowable:targetException] autorelease]];
  }
}

- (void)addMultipleFailureExceptionWithOrgJunitRunnersModelMultipleFailureException:(OrgJunitRunnersModelMultipleFailureException *)mfe {
  for (JavaLangThrowable * __strong each in [((OrgJunitRunnersModelMultipleFailureException *) nil_chk(mfe)) getFailures]) [self addFailureWithJavaLangThrowable:each];
}

- (void)addFailedAssumptionWithOrgJunitInternalAssumptionViolatedException:(OrgJunitInternalAssumptionViolatedException *)e {
  [((OrgJunitRunnerNotificationRunNotifier *) nil_chk(fNotifier_)) fireTestAssumptionFailedWithOrgJunitRunnerNotificationFailure:[[[OrgJunitRunnerNotificationFailure alloc] initWithOrgJunitRunnerDescription:fDescription_ withJavaLangThrowable:e] autorelease]];
}

- (void)fireTestFinished {
  [((OrgJunitRunnerNotificationRunNotifier *) nil_chk(fNotifier_)) fireTestFinishedWithOrgJunitRunnerDescription:fDescription_];
}

- (void)fireTestStarted {
  [((OrgJunitRunnerNotificationRunNotifier *) nil_chk(fNotifier_)) fireTestStartedWithOrgJunitRunnerDescription:fDescription_];
}

- (void)fireTestIgnored {
  [((OrgJunitRunnerNotificationRunNotifier *) nil_chk(fNotifier_)) fireTestIgnoredWithOrgJunitRunnerDescription:fDescription_];
}

- (void)dealloc {
  OrgJunitInternalRunnersModelEachTestNotifier_set_fDescription_(self, nil);
  OrgJunitInternalRunnersModelEachTestNotifier_set_fNotifier_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJunitInternalRunnersModelEachTestNotifier *)other {
  [super copyAllFieldsTo:other];
  OrgJunitInternalRunnersModelEachTestNotifier_set_fDescription_(other, fDescription_);
  OrgJunitInternalRunnersModelEachTestNotifier_set_fNotifier_(other, fNotifier_);
}

@end
