//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/retechretech/dev/tools/lib/j2objc/junit/build_result/java/org/junit/internal/TextListener.java
//
//  Created by retechretech on 13-9-25.
//

#include "java/io/PrintStream.h"
#include "java/text/NumberFormat.h"
#include "java/util/List.h"
#include "org/junit/internal/JUnitSystem.h"
#include "org/junit/internal/TextListener.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runner/Result.h"
#include "org/junit/runner/notification/Failure.h"

@implementation OrgJunitInternalTextListener

- (id)initWithOrgJunitInternalJUnitSystem:(id<OrgJunitInternalJUnitSystem>)system {
  return [self initOrgJunitInternalTextListenerWithJavaIoPrintStream:[((id<OrgJunitInternalJUnitSystem>) nil_chk(system)) out]];
}

- (id)initOrgJunitInternalTextListenerWithJavaIoPrintStream:(JavaIoPrintStream *)writer {
  if (self = [super init]) {
    OrgJunitInternalTextListener_set_fWriter_(self, writer);
  }
  return self;
}

- (id)initWithJavaIoPrintStream:(JavaIoPrintStream *)writer {
  return [self initOrgJunitInternalTextListenerWithJavaIoPrintStream:writer];
}

- (void)testRunFinishedWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result {
  [self printHeaderWithLong:[((OrgJunitRunnerResult *) nil_chk(result)) getRunTime]];
  [self printFailuresWithOrgJunitRunnerResult:result];
  [self printFooterWithOrgJunitRunnerResult:result];
}

- (void)testStartedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  [((JavaIoPrintStream *) nil_chk(fWriter_)) appendWithChar:'.'];
}

- (void)testFailureWithOrgJunitRunnerNotificationFailure:(OrgJunitRunnerNotificationFailure *)failure {
  [((JavaIoPrintStream *) nil_chk(fWriter_)) appendWithChar:'E'];
}

- (void)testIgnoredWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  [((JavaIoPrintStream *) nil_chk(fWriter_)) appendWithChar:'I'];
}

- (JavaIoPrintStream *)getWriter {
  return fWriter_;
}

- (void)printHeaderWithLong:(long long int)runTime {
  [((JavaIoPrintStream *) nil_chk([self getWriter])) println];
  [((JavaIoPrintStream *) nil_chk([self getWriter])) printlnWithNSString:[NSString stringWithFormat:@"Time: %@", [self elapsedTimeAsStringWithLong:runTime]]];
}

- (void)printFailuresWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result {
  id<JavaUtilList> failures = [((OrgJunitRunnerResult *) nil_chk(result)) getFailures];
  if ([((id<JavaUtilList>) nil_chk(failures)) size] == 0) return;
  if ([failures size] == 1) [((JavaIoPrintStream *) nil_chk([self getWriter])) printlnWithNSString:[NSString stringWithFormat:@"There was %d failure:", [failures size]]];
  else [((JavaIoPrintStream *) nil_chk([self getWriter])) printlnWithNSString:[NSString stringWithFormat:@"There were %d failures:", [failures size]]];
  int i = 1;
  for (OrgJunitRunnerNotificationFailure * __strong each in failures) [self printFailureWithOrgJunitRunnerNotificationFailure:each withNSString:[NSString stringWithFormat:@"%d", i++]];
}

- (void)printFailureWithOrgJunitRunnerNotificationFailure:(OrgJunitRunnerNotificationFailure *)each
                                             withNSString:(NSString *)prefix {
  [((JavaIoPrintStream *) nil_chk([self getWriter])) printlnWithNSString:[NSString stringWithFormat:@"%@) %@", prefix, [((OrgJunitRunnerNotificationFailure *) nil_chk(each)) getTestHeader]]];
  [((JavaIoPrintStream *) nil_chk([self getWriter])) printWithNSString:[each getTrace]];
}

- (void)printFooterWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result {
  if ([((OrgJunitRunnerResult *) nil_chk(result)) wasSuccessful]) {
    [((JavaIoPrintStream *) nil_chk([self getWriter])) println];
    [((JavaIoPrintStream *) nil_chk([self getWriter])) printWithNSString:@"OK"];
    [((JavaIoPrintStream *) nil_chk([self getWriter])) printlnWithNSString:[NSString stringWithFormat:@" (%d test%@)", [result getRunCount], ([result getRunCount] == 1 ? @"" : @"s")]];
  }
  else {
    [((JavaIoPrintStream *) nil_chk([self getWriter])) println];
    [((JavaIoPrintStream *) nil_chk([self getWriter])) printlnWithNSString:@"FAILURES!!!"];
    [((JavaIoPrintStream *) nil_chk([self getWriter])) printlnWithNSString:[NSString stringWithFormat:@"Tests run: %d,  Failures: %d", [result getRunCount], [result getFailureCount]]];
  }
  [((JavaIoPrintStream *) nil_chk([self getWriter])) println];
}

- (NSString *)elapsedTimeAsStringWithLong:(long long int)runTime {
  return [((JavaTextNumberFormat *) nil_chk([JavaTextNumberFormat getInstance])) formatWithDouble:(double) runTime / 1000];
}

- (void)dealloc {
  OrgJunitInternalTextListener_set_fWriter_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJunitInternalTextListener *)other {
  [super copyAllFieldsTo:other];
  OrgJunitInternalTextListener_set_fWriter_(other, fWriter_);
}

@end
