//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/retechretech/dev/tools/lib/j2objc/junit/build_result/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java
//
//  Created by retechretech on 13-9-25.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/Throwable.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "org/junit/internal/builders/AllDefaultPossibilitiesBuilder.h"
#include "org/junit/internal/builders/AnnotatedBuilder.h"
#include "org/junit/internal/builders/IgnoredBuilder.h"
#include "org/junit/internal/builders/JUnit3Builder.h"
#include "org/junit/internal/builders/JUnit4Builder.h"
#include "org/junit/internal/builders/NullBuilder.h"
#include "org/junit/internal/builders/SuiteMethodBuilder.h"
#include "org/junit/runner/Runner.h"
#include "org/junit/runners/model/RunnerBuilder.h"

@implementation OrgJunitInternalBuildersAllDefaultPossibilitiesBuilder

- (id)initWithBoolean:(BOOL)canUseSuiteMethod {
  if (self = [super init]) {
    fCanUseSuiteMethod_ = canUseSuiteMethod;
  }
  return self;
}

- (OrgJunitRunnerRunner *)runnerForClassWithIOSClass:(IOSClass *)testClass {
  id<JavaUtilList> builders = [JavaUtilArrays asListWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self ignoredBuilder], [self annotatedBuilder], [self suiteMethodBuilder], [self junit3Builder], [self junit4Builder] } count:5 type:[IOSClass classWithClass:[NSObject class]]]];
  for (OrgJunitRunnersModelRunnerBuilder * __strong each in builders) {
    OrgJunitRunnerRunner *runner = [((OrgJunitRunnersModelRunnerBuilder *) nil_chk(each)) safeRunnerForClassWithIOSClass:testClass];
    if (runner != nil) return runner;
  }
  return nil;
}

+ (IOSObjectArray *)__exceptions_runnerForClassWithIOSClass_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [JavaLangThrowable getClass] } count:1 type:[IOSClass getClass]];
}

- (OrgJunitInternalBuildersJUnit4Builder *)junit4Builder {
  return [[[OrgJunitInternalBuildersJUnit4Builder alloc] init] autorelease];
}

- (OrgJunitInternalBuildersJUnit3Builder *)junit3Builder {
  return [[[OrgJunitInternalBuildersJUnit3Builder alloc] init] autorelease];
}

- (OrgJunitInternalBuildersAnnotatedBuilder *)annotatedBuilder {
  return [[[OrgJunitInternalBuildersAnnotatedBuilder alloc] initWithOrgJunitRunnersModelRunnerBuilder:self] autorelease];
}

- (OrgJunitInternalBuildersIgnoredBuilder *)ignoredBuilder {
  return [[[OrgJunitInternalBuildersIgnoredBuilder alloc] init] autorelease];
}

- (OrgJunitRunnersModelRunnerBuilder *)suiteMethodBuilder {
  if (fCanUseSuiteMethod_) return [[[OrgJunitInternalBuildersSuiteMethodBuilder alloc] init] autorelease];
  return [[[OrgJunitInternalBuildersNullBuilder alloc] init] autorelease];
}

- (void)copyAllFieldsTo:(OrgJunitInternalBuildersAllDefaultPossibilitiesBuilder *)other {
  [super copyAllFieldsTo:other];
  other->fCanUseSuiteMethod_ = fCanUseSuiteMethod_;
}

@end
