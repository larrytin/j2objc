//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSObjectArray.h"
#include "java/lang/Exception.h"
#include "java/lang/reflect/GenericArrayType.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/lang/reflect/TypeVariable.h"
#include "java/lang/reflect/WildcardType.h"
#include "java/util/List.h"
#include "org/junit/runners/model/NoGenericTypeParametersValidator.h"

@implementation OrgJunitRunnersModelNoGenericTypeParametersValidator

- (id)initWithJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  if (self = [super init]) {
    OrgJunitRunnersModelNoGenericTypeParametersValidator_set_fMethod_(self, method);
  }
  return self;
}

- (void)validateWithJavaUtilList:(id<JavaUtilList>)errors {
  {
    IOSObjectArray *a__ = [((JavaLangReflectMethod *) nil_chk(fMethod_)) getGenericParameterTypes];
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> each = (*b__++);
      [self validateNoTypeParameterOnTypeWithJavaLangReflectType:each withJavaUtilList:errors];
    }
  }
}

- (void)validateNoTypeParameterOnTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                            withJavaUtilList:(id<JavaUtilList>)errors {
  if ([(id) type conformsToProtocol: @protocol(JavaLangReflectTypeVariable)]) {
    [((id<JavaUtilList>) nil_chk(errors)) addWithId:[[[JavaLangException alloc] initWithNSString:[NSString stringWithFormat:@"Method %@() contains unresolved type variable %@", [((JavaLangReflectMethod *) nil_chk(fMethod_)) getName], type]] autorelease]];
  }
  else if ([(id) type conformsToProtocol: @protocol(JavaLangReflectParameterizedType)]) [self validateNoTypeParameterOnParameterizedTypeWithJavaLangReflectParameterizedType:(id<JavaLangReflectParameterizedType>) check_protocol_cast(type, @protocol(JavaLangReflectParameterizedType)) withJavaUtilList:errors];
  else if ([(id) type conformsToProtocol: @protocol(JavaLangReflectWildcardType)]) [self validateNoTypeParameterOnWildcardTypeWithJavaLangReflectWildcardType:(id<JavaLangReflectWildcardType>) check_protocol_cast(type, @protocol(JavaLangReflectWildcardType)) withJavaUtilList:errors];
  else if ([(id) type conformsToProtocol: @protocol(JavaLangReflectGenericArrayType)]) [self validateNoTypeParameterOnGenericArrayTypeWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>) check_protocol_cast(type, @protocol(JavaLangReflectGenericArrayType)) withJavaUtilList:errors];
}

- (void)validateNoTypeParameterOnParameterizedTypeWithJavaLangReflectParameterizedType:(id<JavaLangReflectParameterizedType>)parameterized
                                                                      withJavaUtilList:(id<JavaUtilList>)errors {
  {
    IOSObjectArray *a__ = [((id<JavaLangReflectParameterizedType>) nil_chk(parameterized)) getActualTypeArguments];
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> each = (*b__++);
      [self validateNoTypeParameterOnTypeWithJavaLangReflectType:each withJavaUtilList:errors];
    }
  }
}

- (void)validateNoTypeParameterOnWildcardTypeWithJavaLangReflectWildcardType:(id<JavaLangReflectWildcardType>)wildcard
                                                            withJavaUtilList:(id<JavaUtilList>)errors {
  {
    IOSObjectArray *a__ = [((id<JavaLangReflectWildcardType>) nil_chk(wildcard)) getUpperBounds];
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> each = (*b__++);
      [self validateNoTypeParameterOnTypeWithJavaLangReflectType:each withJavaUtilList:errors];
    }
  }
  {
    IOSObjectArray *a__ = [wildcard getLowerBounds];
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> each = (*b__++);
      [self validateNoTypeParameterOnTypeWithJavaLangReflectType:each withJavaUtilList:errors];
    }
  }
}

- (void)validateNoTypeParameterOnGenericArrayTypeWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)arrayType
                                                                    withJavaUtilList:(id<JavaUtilList>)errors {
  [self validateNoTypeParameterOnTypeWithJavaLangReflectType:[((id<JavaLangReflectGenericArrayType>) nil_chk(arrayType)) getGenericComponentType] withJavaUtilList:errors];
}

- (void)dealloc {
  OrgJunitRunnersModelNoGenericTypeParametersValidator_set_fMethod_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJunitRunnersModelNoGenericTypeParametersValidator *)other {
  [super copyAllFieldsTo:other];
  OrgJunitRunnersModelNoGenericTypeParametersValidator_set_fMethod_(other, fMethod_);
}

@end
