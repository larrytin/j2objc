//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "java/util/Comparator.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runner/manipulation/Sortable.h"
#include "org/junit/runner/manipulation/Sorter.h"

@implementation OrgJunitRunnerManipulationSorter

static OrgJunitRunnerManipulationSorter * OrgJunitRunnerManipulationSorter_NULL__;

+ (OrgJunitRunnerManipulationSorter *)getNULL {
  return OrgJunitRunnerManipulationSorter_NULL__;
}

+ (void)setNULL:(OrgJunitRunnerManipulationSorter *)NULL_ {
  JreOperatorRetainedAssign(&OrgJunitRunnerManipulationSorter_NULL__, nil, NULL_);
}

- (id)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  if (self = [super init]) {
    OrgJunitRunnerManipulationSorter_set_fComparator_(self, comparator);
  }
  return self;
}

- (void)applyWithId:(id)object {
  if ([object conformsToProtocol: @protocol(OrgJunitRunnerManipulationSortable)]) {
    id<OrgJunitRunnerManipulationSortable> sortable = (id<OrgJunitRunnerManipulationSortable>) check_protocol_cast(object, @protocol(OrgJunitRunnerManipulationSortable));
    [((id<OrgJunitRunnerManipulationSortable>) nil_chk(sortable)) sortWithOrgJunitRunnerManipulationSorter:self];
  }
}

- (int)compareWithId:(OrgJunitRunnerDescription *)o1
              withId:(OrgJunitRunnerDescription *)o2 {
  return [((id<JavaUtilComparator>) nil_chk(fComparator_)) compareWithId:o1 withId:o2];
}

+ (void)initialize {
  if (self == [OrgJunitRunnerManipulationSorter class]) {
    JreOperatorRetainedAssign(&OrgJunitRunnerManipulationSorter_NULL__, nil, [[[OrgJunitRunnerManipulationSorter alloc] initWithJavaUtilComparator:[[[OrgJunitRunnerManipulationSorter_$1 alloc] init] autorelease]] autorelease]);
  }
}

- (void)dealloc {
  OrgJunitRunnerManipulationSorter_set_fComparator_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJunitRunnerManipulationSorter *)other {
  [super copyAllFieldsTo:other];
  OrgJunitRunnerManipulationSorter_set_fComparator_(other, fComparator_);
}

@end
@implementation OrgJunitRunnerManipulationSorter_$1

- (int)compareWithId:(OrgJunitRunnerDescription *)o1
              withId:(OrgJunitRunnerDescription *)o2 {
  return 0;
}

- (id)init {
  return [super init];
}

@end
