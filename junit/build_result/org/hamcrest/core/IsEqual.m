//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "IOSClass.h"
#include "java/lang/reflect/Array.h"
#include "org/hamcrest/Description.h"
#include "org/hamcrest/Factory.h"
#include "org/hamcrest/Matcher.h"
#include "org/hamcrest/core/IsEqual.h"

@implementation OrgHamcrestCoreIsEqual

- (id)initWithId:(id)equalArg {
  if (self = [super init]) {
    OrgHamcrestCoreIsEqual_set_object_(self, equalArg);
  }
  return self;
}

- (BOOL)matchesWithId:(id)arg {
  return [OrgHamcrestCoreIsEqual areEqualWithId:object_ withId:arg];
}

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestDescription>) nil_chk(description_)) appendValueWithId:object_];
}

+ (BOOL)areEqualWithId:(id)o1
                withId:(id)o2 {
  if (o1 == nil || o2 == nil) {
    return o1 == nil && o2 == nil;
  }
  else if ([OrgHamcrestCoreIsEqual isArrayWithId:o1]) {
    return [OrgHamcrestCoreIsEqual isArrayWithId:o2] && [OrgHamcrestCoreIsEqual areArraysEqualWithId:o1 withId:o2];
  }
  else {
    return [o1 isEqual:o2];
  }
}

+ (BOOL)areArraysEqualWithId:(id)o1
                      withId:(id)o2 {
  return [OrgHamcrestCoreIsEqual areArrayLengthsEqualWithId:o1 withId:o2] && [OrgHamcrestCoreIsEqual areArrayElementsEqualWithId:o1 withId:o2];
}

+ (BOOL)areArrayLengthsEqualWithId:(id)o1
                            withId:(id)o2 {
  return [JavaLangReflectArray getLengthWithId:o1] == [JavaLangReflectArray getLengthWithId:o2];
}

+ (BOOL)areArrayElementsEqualWithId:(id)o1
                             withId:(id)o2 {
  for (int i = 0; i < [JavaLangReflectArray getLengthWithId:o1]; i++) {
    if (![OrgHamcrestCoreIsEqual areEqualWithId:[JavaLangReflectArray getWithId:o1 withInt:i] withId:[JavaLangReflectArray getWithId:o2 withInt:i]]) return NO;
  }
  return YES;
}

+ (BOOL)isArrayWithId:(id)o {
  return [[nil_chk(o) getClass] isArray];
}

+ (id<OrgHamcrestMatcher>)equalToWithId:(id)operand {
  return [[[OrgHamcrestCoreIsEqual alloc] initWithId:operand] autorelease];
}

- (void)dealloc {
  OrgHamcrestCoreIsEqual_set_object_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgHamcrestCoreIsEqual *)other {
  [super copyAllFieldsTo:other];
  OrgHamcrestCoreIsEqual_set_object_(other, object_);
}

+ (IOSObjectArray *)__annotations_equalToWithId_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgHamcrestFactoryImpl alloc] init] autorelease] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

@end
